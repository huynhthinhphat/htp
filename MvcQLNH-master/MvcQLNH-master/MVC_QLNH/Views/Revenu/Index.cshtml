@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<MVC_QLNH.Models.TbBillHistory>
@{
    ViewData["Title"] = "Index";
}
<style>
    .table {
        width: 100%;
        border-collapse: collapse;
        border-right: 1px solid #ddd;
        border-left: 1px solid #ddd;
    }

    .table th {
        background-color: #007bff; 
        color: #fff;
        padding: 10px; 
        text-align: center; 
    }

    .table td {
        border-bottom: 1px solid #ddd; 
        text-align:center;
    }
    .table td:last-child{
        display: flex;
        justify-content: space-evenly;
    }
    .btn {
        padding: 5px 10px; 
        border: none; 
        cursor: pointer;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
    }

    .btn-danger {
        background-color: #dc3545; 
        color: #fff; 
    }

    #content_index {
        display: flex;
        flex-direction: column;
        padding: 0px 2%;
    }

    #form_search {
        border: 1.5px solid #ddd;
        border-radius: 15px;
        padding: 7px 15px;
    }

    .form-floating input[type="text"],
    .form-floating input[type="date"] {
        width: 80%; 
        margin-bottom: 10px;
    }

    .form-floating label {
        margin-left: 8vh; 
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-primary:hover {
        background-color: #0056b3; 
    }

    .form_search_text {
        display:flex;
        padding-top: 1%;
        height: 52px;
    }

    .form_search_text .form-floating{
        display: flex;
        justify-content: center;
    }
    .form_search_time{
        display: flex;
        flex-direction: column;
        width: 100%;
        padding: 7px 0px;
    }
    .form_search_time div label:first-child{
        padding-left: 5%;
    }
    .form_search_time div{
        padding: 7px 0px 0px 0px;
    }
    .form_search_time div:last-child{
        display:flex;
        justify-content: center;
    }

    .input_date label {
        display:flex;
        justify-content: center;
        flex-direction: column;
        text-align: center;
        width: 10%;
    }
    .input_date div{
        width: 40%;
        display:flex;
        justify-content: center;
    }
    .input_date input{
        width: 100%;
        border-radius: 12px;
    }

    .form_btn{
        width: 95%;
        display:flex;
        justify-content: end;
    }
    .form-floating{
        width:50%;
    }
    .form-floating>.form-control, .form-floating>.form-select {
    height: calc(1.5rem + 2px);
    border-radius: 12px;
    }

    label {
        margin-bottom: 0rem;
    }

    .form-floating > label {
        font-size: 15px;
        height: 55%;
        padding: 0.25rem .75rem;
    }

    .form-floating > .form-control:focus ~ label, .form-floating > .form-control:not(:placeholder-shown) ~ label, .form-floating > .form-select ~ label {
        transform: scale(0.85) translateY(-0.5rem) translateX(0.35rem);
    }

    .form-floating > .form-control:focus, .form-floating > .form-control:not(:placeholder-shown) {
        padding-top: 1.5rem;
        padding-bottom: .5rem;
    }

    .btn-edit{
        background-color: #007bff;
        border: none;
        color: #fff;
        padding: 5px 9px;
        border-radius: 5px;
    }

    .custom-modal-size {
        max-width: 180vh;
    }

    .col-md-4{
        width: 100%;
    }
</style>

@{
    ViewData["Title"] = "Index";
}

<div id="content_index">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h3 class="h3 mb-0 text-gray-800">DOANH THU</h3>
    </div>

    <div>
        <form id="form_search" asp-action="Index" method="get">
            <div class="form_search_text">
                <div class="form-floating mb-3">
                    <input type="text" name="search_billid" value="@ViewData["search_billid"]" placeholder="Nhập mã hóa đơn..." class="form-control" id="floatingInput">
                    <label for="floatingInput">Tìm kiếm mã hóa đơn</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="text" name="search_tablename" value="@ViewData["search_tablename"]" placeholder="Nhập số bàn..." class="form-control" id="floatingPassword">
                    <label for="floatingPassword">Tìm kiếm số bàn</label>
                </div>
            </div>
            <div class="form_search_time">
                <div>
                    <label>Tìm kiếm theo thời gian</label>
                </div>
                <div class="input_date">
                    <div>
                        <input type="date" name="search_fromdate" value="@((ViewData["search_fromdate"] as DateOnly?)?.ToString("yyyy-MM-dd"))" class="form-control">
                    </div>
                    <label><span>đến</span></label>
                    <div>
                        <input type="date" name="search_todate" value="@((ViewData["search_todate"] as DateOnly?)?.ToString("yyyy-MM-dd"))" class="form-control">
                    </div>
                </div>
            </div>
            <div class="form_btn">
                <button type="submit" / class="btn btn-primary">Tìm kiếm</button>
            </div>
        </form>
    </div>
    <a asp-action="Index">Back to Full List</a>

<table class="table">
    <thead>
        <tr>
            <th>
                MÃ HÓA ĐƠN
            </th>
            <th>
                BÀN
            </th>
            <th>
                KHÁCH HÀNG
            </th>
            <th>
                SỐ ĐIỆN THOẠI
            </th>
            <th>
                THỜI GIAN
            </th>
            <th>
                TỔNG TIỀN
            </th>
            <th>
                NHÂN VIÊN
            </th>
            <th>CHỨC NĂNG</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BillId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TableName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sdt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BillDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserInfo.FullName)
            </td>
            <td>
                <button id="btn-edit" class="btn-edit" data-billid="@item.BillId"><i class="fas fa-edit"></i></button>
                <form asp-action="Delete" asp-route-id="@item.BillId" method="post" onsubmit="return confirm('Bạn có chắc chắn muốn xóa hóa đơn @item.BillId này không?');">
                    <button type="submit" class="btn btn-danger"><i class="fa fa-trash"></i></button>
                </form>
            </td>
        </tr>
}
    </tbody>
</table>
<!-- Phân trang -->
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <!-- Phân trang -->
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.PageCount > 1)
                    {
                        for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Hiển thị số trang và số món -->
<div class="container">
    <div class="row">
        <div class="col-md-12">
                <span>Số trang: @Model.PageCount</span> | <span>Số hóa đơn: @Model.TotalItemCount</span>
        </div>
    </div>
</div>
</div>

<!-- Modal for Edit -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-modal-size" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Thông tin chi tiết</h5>
            </div>
            <div class="modal-body">
                <!-- Form chỉnh sửa sẽ được load ở đây -->
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Lấy tham chiếu của các input
        var billIdInput = document.querySelector('input[name="search_billid"]');
        var tableNameInput = document.querySelector('input[name="search_tablename"]');
        var searchfromdate = document.querySelector('input[name="search_fromdate"]');
        var searchtodate = document.querySelector('input[name="search_todate"]');

        //giá trị input date
        var value_fromdate = searchfromdate.value;
        var value_todate = searchtodate.value;

        // Kiểm tra giá trị của input "mã hóa đơn"
        if (billIdInput.value.trim() !== '') {
            // Nếu có giá trị, disable input "mã bàn" và các input thời gian
            tableNameInput.disabled = true;
            searchfromdate.disabled = true;
            searchtodate.disabled = true;
        } else {
            // Nếu không có giá trị, enable tất cả các input
            tableNameInput.disabled = false;
            searchfromdate.disabled = false;
            searchtodate.disabled = false;
        }
        if (tableNameInput.value.trim() !== '') {
            billIdInput.disabled = true;
        } else {
            billIdInput.disabled = false;
        }
        // Kiểm tra sự kiện khi người dùng nhập vào input "mã hóa đơn"
        billIdInput.addEventListener('input', function () {
            // Nếu input "mã hóa đơn" không rỗng
            if (billIdInput.value.trim() !== '') {
                console.log('Input event fired');
                // Vô hiệu hóa input "mã bàn" và xóa giá trị của nó
                tableNameInput.disabled = true;
                tableNameInput.value = '';

                searchfromdate.disabled = true;
                searchfromdate.value = '';

                searchtodate.disabled = true;
                searchtodate.value = '';
            } else {
                // Kích hoạt input "mã bàn" khi input "mã hóa đơn" rỗng
                tableNameInput.disabled = false;
                searchfromdate.disabled = false;
                searchtodate.disabled = false;
            }
        });

        // Kiểm tra sự kiện khi người dùng nhập vào input "mã bàn"
        tableNameInput.addEventListener('input', function () {
            // Nếu input "mã bàn" không rỗng
            if (tableNameInput.value.trim() !== '') {
                // Vô hiệu hóa input "mã hóa đơn" và xóa giá trị của nó
                billIdInput.disabled = true;
                billIdInput.value = '';
            } else {
                // Kích hoạt input "mã hóa đơn" khi input "mã bàn" rỗng
                billIdInput.disabled = false;
            }
        });

        $(document).ready(function () {
            // Xử lý sự kiện click nút Edit
            $('.btn-edit').click(function () {
                var billId = $(this).data('billid');
                var url = '@Url.Action("Edit", "Revenu")' + '/' + billId; // Tạo đường dẫn với id
                $.ajax({
                    url: url, // Đường dẫn đến action chỉnh sửa với id
                    type: 'GET',
                    success: function (result) {
                        $('#editModal .modal-body').html(result);
                        $('#editModal').modal('show');
                    }
                });
            });

            if (value_fromdate && value_todate) {
                if (value_fromdate > value_todate) {
                    confirm("Lỗi: Ngày trước lớn hơn ngày sau")
                }
            }
            // Kiểm tra xem có thông điệp lưu thành công hay không
            var saveSuccessMessage = '@TempData["SaveSuccessMessage"]';
            if (saveSuccessMessage == 1) {
                alert("Lưu thành công"); // Hiển thị thông báo xác nhận
            } else if (saveSuccessMessage == 2) {
                alert("Lưu thất bại"); // Hiển thị thông báo xác nhận
            }
        });
    });
</script>